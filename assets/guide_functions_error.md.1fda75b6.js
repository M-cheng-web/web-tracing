import{_ as s,o as n,c as a,U as t}from"./chunks/framework.caeb0c25.js";const h=JSON.parse('{"title":"Error","description":"","frontmatter":{},"headers":[],"relativePath":"guide/functions/error.md","filePath":"guide/functions/error.md","lastUpdated":1689745507000}'),l={name:"guide/functions/error.md"},o=t(`<h1 id="error" tabindex="-1">Error <a class="header-anchor" href="#error" aria-label="Permalink to &quot;Error&quot;">​</a></h1><p>页面错误自动收集,主要原理是 监听/劫持 <code>error unhandledrejection console.error</code>,采集这三类错误</p><ul><li>资源加载错误,代码异常(error)</li><li>promise调用链异常(reject)</li><li>console.error异常</li></ul><p>触发事件时生成的对象</p><table><thead><tr><th>属性名称</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td>eventId</td><td>code / HTML元素上发生异常则为元素名</td><td>事件ID</td></tr><tr><td>eventType</td><td>error</td><td>事件类型</td></tr><tr><td>triggerPageUrl</td><td></td><td>当前页面URL</td></tr><tr><td>errMessage</td><td></td><td>错误信息</td></tr><tr><td>errStack</td><td></td><td>完整的错误信息</td></tr><tr><td>line</td><td></td><td>错误信息发生在第几行</td></tr><tr><td>col</td><td></td><td>错误信息发生在第几列</td></tr><tr><td>recordscreen</td><td></td><td>错误录屏数据</td></tr><tr><td>params</td><td></td><td>主动方法触发错误收集可以带参数</td></tr><tr><td>sendTime</td><td></td><td>发送时间</td></tr><tr><td>triggerTime</td><td></td><td>事件发生时间</td></tr></tbody></table><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 真实场景产生的事件对象</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">eventId</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">code</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">eventType</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">errMessage</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a.split is not a function</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">line</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">288</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">col</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">9</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">sendTime</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1689728522923</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">triggerTime</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1689728522923</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">triggerPageUrl</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:6656/#/err</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">recordscreen</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">H4sIAAAAAAAAA+R9V3vqyNLuD9oXh2C8h0sbm7RA3saYoDuChyQwswATfv2p6</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 错误录屏数据</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">errStack</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">TypeError: a.split is not a function</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at VueComponent.codeError (http://localhost:6656/src/views/err/index.vue:288:9)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at invokeWithErrorHandling (http://localhost:6656/node_modules/.vite/deps/chunk-A2PO35VE.js?v=534c31e8:787:26)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at VueComponent.invoker (http://localhost:6656/node_modules/.vite/deps/chunk-A2PO35VE.js?v=534c31e8:892:14)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at invokeWithErrorHandling (http://localhost:6656/node_modules/.vite/deps/chunk-A2PO35VE.js?v=534c31e8:787:26)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at Vue2.$emit (http://localhost:6656/node_modules/.vite/deps/chunk-A2PO35VE.js?v=534c31e8:2034:9)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at VueComponent.handleClick (http://localhost:6656/node_modules/.vite/deps/element-ui.js?v=534c31e8:27234:20)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at invokeWithErrorHandling (http://localhost:6656/node_modules/.vite/deps/chunk-A2PO35VE.js?v=534c31e8:787:26)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at HTMLButtonElement.invoker (http://localhost:6656/node_modules/.vite/deps/chunk-A2PO35VE.js?v=534c31e8:892:14)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at original._wrapper (http://localhost:6656/node_modules/.vite/deps/chunk-A2PO35VE.js?v=534c31e8:3934:25)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="批量错误采集" tabindex="-1">批量错误采集 <a class="header-anchor" href="#批量错误采集" aria-label="Permalink to &quot;批量错误采集&quot;">​</a></h2><p>错误过多自动转区间事件，也就是去重</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>为了应对被监控的项目发生了批量错误时sdk会将这些重复的错误都一一发送到服务端，特别是当这些错误是循环无限错误时，对服务端的浪费是灾难性的，所以提出此参数；当开启了后sdk内部会判断是否为批量错误，然后归纳一起发送给服务端；当批量错误多了sdk会识别出无限错误，每隔20s才发送此错误</p></div><h3 id="开启方式" tabindex="-1">开启方式 <a class="header-anchor" href="#开启方式" aria-label="Permalink to &quot;开启方式&quot;">​</a></h3><p><code>scopeError = true</code></p><p>开启后有以下两点体现上的不同</p><ul><li>普通单个错误的发生会延迟2s才采集到事件队列中(延迟2s是因为要观察是否会有批量相同错误)</li><li>批量错误但不是无限错误，会延迟22s才采集到事件队列中</li><li>无限错误每满50个则发送这些错误事件到事件队列中</li><li>批量错误和普通单个错误的参数不同</li></ul><h3 id="捕获批量错误流程" tabindex="-1">捕获批量错误流程 <a class="header-anchor" href="#捕获批量错误流程" aria-label="Permalink to &quot;捕获批量错误流程&quot;">​</a></h3><ol><li>先把所有错误都放入 a错误栈</li><li>每次发生错误后防抖 2s查 a栈是否有批量错误(批量错误:errMessage、errType相同且发生个数大于等于5) <ol><li>如果为批量错误则合并这些错误并加入 <code>时间区间参数、发生个数参数</code> 后放入 b栈</li><li>不为批量错误则发送这些错误</li></ol></li><li>资源的错误加载没有明确字段表示，但会在err模块被监听捕获，所以要在管理端筛选</li><li>每次推入错误到b栈后延迟 20s查 b栈并发送这些错误</li><li>在这个过程中，如果用户关闭了网页，会统一把 a栈、b栈内的数据发送</li><li>在这个过程中，a栈每满50个错误也会强制触发a栈和b栈的错误处理（处理结果为直接发送批量错误）</li></ol><h3 id="批量错误参数" tabindex="-1">批量错误参数 <a class="header-anchor" href="#批量错误参数" aria-label="Permalink to &quot;批量错误参数&quot;">​</a></h3><table><thead><tr><th>属性名称</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td>eventId</td><td>code / HTML元素上发生异常则为元素名</td><td>事件ID</td></tr><tr><td>eventType</td><td>error</td><td>事件类型</td></tr><tr><td>batchError</td><td></td><td>是否为批量错误</td></tr><tr><td>batchErrorLastHappenTime</td><td></td><td>批量错误中最后一个错误发生时间</td></tr><tr><td>batchErrorLength</td><td></td><td>批量错误的个数</td></tr><tr><td>triggerPageUrl</td><td></td><td>当前页面URL</td></tr><tr><td>errMessage</td><td></td><td>错误信息</td></tr><tr><td>errStack</td><td></td><td>完整的错误信息</td></tr><tr><td>line</td><td></td><td>错误信息发生在第几行</td></tr><tr><td>col</td><td></td><td>错误信息发生在第几列</td></tr><tr><td>recordscreen</td><td></td><td>错误录屏数据</td></tr><tr><td>params</td><td></td><td>主动方法触发错误收集可以带参数</td></tr><tr><td>sendTime</td><td></td><td>发送时间</td></tr><tr><td>triggerTime</td><td></td><td>事件发生时间</td></tr></tbody></table><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 真实场景产生的事件对象</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">eventId</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">code</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">eventType</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">errMessage</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a.split is not a function</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">batchError</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">batchErrorLastHappenTime</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1689744409113</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">batchErrorLength</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">errStack</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">TypeError: a.split is not a function</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at VueComponent.codeError (http://localhost:6656/src/views/err/index.vue?t=1689734427168:288:9)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at invokeWithErrorHandling (http://localhost:6656/node_modules/.vite/deps/chunk-A2PO35VE.js?v=534c31e8:787:26)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at VueComponent.invoker (http://localhost:6656/node_modules/.vite/deps/chunk-A2PO35VE.js?v=534c31e8:892:14)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at invokeWithErrorHandling (http://localhost:6656/node_modules/.vite/deps/chunk-A2PO35VE.js?v=534c31e8:787:26)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at Vue2.$emit (http://localhost:6656/node_modules/.vite/deps/chunk-A2PO35VE.js?v=534c31e8:2034:9)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at VueComponent.handleClick (http://localhost:6656/node_modules/.vite/deps/element-ui.js?v=534c31e8:27234:20)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at invokeWithErrorHandling (http://localhost:6656/node_modules/.vite/deps/chunk-A2PO35VE.js?v=534c31e8:787:26)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at HTMLButtonElement.invoker (http://localhost:6656/node_modules/.vite/deps/chunk-A2PO35VE.js?v=534c31e8:892:14)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at original._wrapper (http://localhost:6656/node_modules/.vite/deps/chunk-A2PO35VE.js?v=534c31e8:3934:25)</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    at VueComponent.batchErrorA (http://localhost:6656/src/views/err/index.vue?t=1689734427168:325:44)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">triggerPageUrl</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:6656/#/err</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">line</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">288</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">col</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">9</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">sendTime</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1689744811726</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">triggerTime</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1689744788264</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">recordscreen</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">H4sIAAAAAAAAA+R9V3vqyNLuD9oXh2C8h0sbm7RA3saYoDuChyQwswATfv2p6iB1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 错误录屏数据</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,18),e=[o];function p(r,c,d,F,y,D){return n(),a("div",null,e)}const C=s(l,[["render",p]]);export{h as __pageData,C as default};
